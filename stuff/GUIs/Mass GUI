-- Mass Control GUI with Constant Enforcement
local Players = game:GetService("Players")
local lp = Players.LocalPlayer
local UIS = game:GetService("UserInputService")

local gui = Instance.new("ScreenGui", game:GetService("CoreGui"))
gui.Name = "MassControlGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 320, 0, 160)
frame.Position = UDim2.new(0.05, 0, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)

-- Top Bar
local topBar = Instance.new("Frame", frame)
topBar.Size = UDim2.new(1, 0, 0, 30)
topBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
topBar.BorderSizePixel = 0
Instance.new("UICorner", topBar).CornerRadius = UDim.new(0, 8)

-- Title
local title = Instance.new("TextLabel", topBar)
title.Size = UDim2.new(1, -100, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.Text = "ðŸ’ª Mass Control"
title.TextXAlignment = Enum.TextXAlignment.Left
title.Font = Enum.Font.GothamBold
title.TextSize = 16
title.TextColor3 = Color3.new(1, 1, 1)
title.BackgroundTransparency = 1

-- Drag from Top Bar
local dragging, dragInput, dragStart, startPos
topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

topBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UIS.InputChanged:Connect(function(input)
	if dragging and input == dragInput then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- Create Buttons
local function makeBtn(color, offset, callback)
	local btn = Instance.new("TextButton", topBar)
	btn.Size = UDim2.new(0, 20, 0, 20)
	btn.Position = UDim2.new(1, offset, 0.5, -10)
	btn.AnchorPoint = Vector2.new(1, 0.5)
	btn.BackgroundColor3 = color
	btn.Text = ""
	btn.BorderSizePixel = 0
	btn.MouseButton1Click:Connect(callback)
	return btn
end

-- State variables
local isMin = false
local isFull = false
local originalSize = frame.Size
local originalPosition = frame.Position

-- Mini Icon
local icon = Instance.new("TextButton", gui)
icon.Size = UDim2.new(0, 40, 0, 40)
icon.Position = UDim2.new(0.02, 0, 0.85, 0)
icon.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
icon.Text = "ðŸ’ª"
icon.Visible = false
icon.Active = true
Instance.new("UICorner", icon).CornerRadius = UDim.new(1, 0)

-- Icon dragging
local draggingIcon = false
local iconStartPos, iconStartDrag
icon.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingIcon = true
		iconStartDrag = input.Position
		iconStartPos = icon.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				draggingIcon = false
			end
		end)
	end
end)

UIS.InputChanged:Connect(function(input)
	if draggingIcon and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - iconStartDrag
		icon.Position = UDim2.new(iconStartPos.X.Scale, iconStartPos.X.Offset + delta.X,
			iconStartPos.Y.Scale, iconStartPos.Y.Offset + delta.Y)
	end
end)

icon.MouseButton1Click:Connect(function()
	icon.Visible = false
	frame.Visible = true
end)

-- Fullscreen
makeBtn(Color3.fromRGB(0, 170, 255), -60, function()
	if isFull then
		frame.Size = originalSize
		frame.Position = originalPosition
	else
		originalSize = frame.Size
		originalPosition = frame.Position
		frame.Size = UDim2.new(1, 0, 1, 0)
		frame.Position = UDim2.new(0, 0, 0, 0)
	end
	isFull = not isFull
end)

-- Close to icon
makeBtn(Color3.fromRGB(255, 65, 65), -10, function()
	frame.Visible = false
	icon.Visible = true
end)

-- Slider UI
local slider = Instance.new("Frame", frame)
slider.Size = UDim2.new(1, -40, 0, 6)
slider.Position = UDim2.new(0, 20, 0, 70)
slider.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
slider.BorderSizePixel = 0

local fill = Instance.new("Frame", slider)
fill.Size = UDim2.new(0, 0, 1, 0)
fill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
fill.BorderSizePixel = 0

local handle = Instance.new("Frame", slider)
handle.Size = UDim2.new(0, 12, 0, 18)
handle.Position = UDim2.new(0, 0, -0.6, 0)
handle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
handle.BorderSizePixel = 0
Instance.new("UICorner", handle).CornerRadius = UDim.new(0, 4)

local label = Instance.new("TextLabel", frame)
label.Position = UDim2.new(0, 20, 0, 100)
label.Size = UDim2.new(1, -40, 0, 20)
label.BackgroundTransparency = 1
label.TextColor3 = Color3.new(1, 1, 1)
label.TextSize = 14
label.Font = Enum.Font.Gotham
label.Text = "Density: 0"

-- Mass logic
local currentDensity = 0

local function applyMass(density)
	currentDensity = density
	local char = lp.Character or lp.CharacterAdded:Wait()
	for _, part in ipairs(char:GetDescendants()) do
		if part:IsA("BasePart") then
			part.CustomPhysicalProperties = PhysicalProperties.new(density, 0.3, 0.5, 1, 1)
			part.Massless = false
		end
	end
end

-- Enforce loop
task.spawn(function()
	while true do
		task.wait(0.5)
		pcall(function()
			if currentDensity > 0 then
				applyMass(currentDensity)
			end
		end)
	end
end)

-- Slider dragging
local draggingSlider = false
handle.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSlider = true
	end
end)

UIS.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		draggingSlider = false
	end
end)

UIS.InputChanged:Connect(function(input)
	if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
		local mouseX = input.Position.X
		local relX = math.clamp(mouseX - slider.AbsolutePosition.X, 0, slider.AbsoluteSize.X)
		local percent = relX / slider.AbsoluteSize.X
		local density = math.floor(percent * 100000000)

		fill.Size = UDim2.new(percent, 0, 1, 0)
		handle.Position = UDim2.new(0, relX - 6, -0.6, 0)
		label.Text = "Density: " .. tostring(density)
		applyMass(density)
	end
end)

-- Minimize
makeBtn(Color3.fromRGB(255, 200, 0), -35, function()
	isMin = not isMin
	for _, child in ipairs(frame:GetChildren()) do
		if child ~= topBar then
			child.Visible = not isMin
		end
	end
end)
