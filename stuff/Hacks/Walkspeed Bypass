--TURN ON NOCLIP

-- Obvious Artificial WASD Speed Boost Script (Exploit Style)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Disable default Roblox movement to take full control
humanoid:ChangeState(Enum.HumanoidStateType.Physics)

-- Movement settings
local stepDistance = 0.25 -- studs per tick (visibly strong)
local stepInterval = 0.01 -- seconds

-- Track which keys are held
local movementKeys = {
	W = false,
	A = false,
	S = false,
	D = false,
}

-- Key press detection
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.W then movementKeys.W = true end
	if input.KeyCode == Enum.KeyCode.A then movementKeys.A = true end
	if input.KeyCode == Enum.KeyCode.S then movementKeys.S = true end
	if input.KeyCode == Enum.KeyCode.D then movementKeys.D = true end
end)

UserInputService.InputEnded:Connect(function(input, gpe)
	if input.KeyCode == Enum.KeyCode.W then movementKeys.W = false end
	if input.KeyCode == Enum.KeyCode.A then movementKeys.A = false end
	if input.KeyCode == Enum.KeyCode.S then movementKeys.S = false end
	if input.KeyCode == Enum.KeyCode.D then movementKeys.D = false end
end)

-- Main movement loop
task.spawn(function()
	while true do
		if hrp and humanoid.Health > 0 then
			local moveVector = Vector3.zero
			local cf = hrp.CFrame

			-- Construct movement direction based on keys
			if movementKeys.W then moveVector += cf.LookVector end
			if movementKeys.S then moveVector -= cf.LookVector end
			if movementKeys.D then moveVector += cf.RightVector end
			if movementKeys.A then moveVector -= cf.RightVector end

			if moveVector.Magnitude > 0 then
				moveVector = moveVector.Unit * stepDistance
				hrp.CFrame = hrp.CFrame + moveVector
				print("Moving direction:", moveVector)
			end
		end
		task.wait(stepInterval)
	end
end)
