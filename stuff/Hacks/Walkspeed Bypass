-- Artificial Speed Boost for WASD - No Falling Over Version

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Movement settings
local boostSpeed = 5 -- lolwut?
local moveDirection = Vector3.zero
local keyMap = {
	W = Enum.KeyCode.W,
	A = Enum.KeyCode.A,
	S = Enum.KeyCode.S,
	D = Enum.KeyCode.D
}
local inputState = {
	W = false,
	A = false,
	S = false,
	D = false
}

-- Handle key presses
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	for key, code in pairs(keyMap) do
		if input.KeyCode == code then
			inputState[key] = true
		end
	end
end)

UserInputService.InputEnded:Connect(function(input, gpe)
	for key, code in pairs(keyMap) do
		if input.KeyCode == code then
			inputState[key] = false
		end
	end
end)

-- Boost logic on Heartbeat
RunService.Heartbeat:Connect(function(dt)
	if not (character and hrp and humanoid and humanoid.Health > 0) then return end

	-- Determine movement direction relative to character
	local direction = Vector3.zero
	local cf = hrp.CFrame

	if inputState.W then direction += cf.LookVector end
	if inputState.S then direction -= cf.LookVector end
	if inputState.D then direction += cf.RightVector end
	if inputState.A then direction -= cf.RightVector end

	if direction.Magnitude > 0 then
		direction = direction.Unit * boostSpeed
	else
		direction = Vector3.zero
	end

	-- Apply movement by adding to current velocity
	local currentVel = hrp.AssemblyLinearVelocity
	local vertical = Vector3.new(0, currentVel.Y, 0) -- preserve Y velocity (gravity, jumping)
	local horizontal = Vector3.new(currentVel.X, 0, currentVel.Z)

	local finalVelocity = horizontal + direction
	hrp.AssemblyLinearVelocity = finalVelocity + vertical
end)
